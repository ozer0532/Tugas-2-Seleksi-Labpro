{"version":3,"sources":["getData.js","searchInput.js","dataDisplayer.js","graphDisplayer.js","App.js","serviceWorker.js","index.js"],"names":["apiURL","GetData","index","a","p","PlatformPath","join","axios","get","response","console","log","data","GetAllPerson","TraverseGraphLoop","list","id","currentList","some","e","status","push","name","payload","friends","i","length","styles","paper","display","padding","margin","field","flex","marginLeft","icon","SearchInput","props","state","value","inputChange","bind","onEnterPressed","event","this","setState","target","keyCode","Paper","style","InputBase","placeholder","onChange","onKeyDown","IconButton","onClick","onSearch","React","Component","mainContainer","spaced","marginTop","card","marginBottom","DataDisplayer","RenderIdElements","RenderFriend","RenderFriends","SearchText","searching","Fragment","element","Card","Typography","variant","color","entry","fail","Box","friendsList","filtered","filter","stringEntry","JSON","stringify","findIndex","item","FilterFriends","map","key","Divider","container","height","overflow","graph","width","myConfig","nodeHighlightBehavior","node","size","highlightStrokeColor","labelProperty","link","highlightColor","directed","onClickGraph","onDoubleClickNode","nodeId","onRightClickNode","onMouseOverNode","onMouseOutNode","onClickLink","source","onRightClickLink","onMouseOverLink","onMouseOutLink","onNodePositionChange","x","y","GraphDisplayer","decorateGraphNodesWithInitialPositioning","nodes","n","Object","assign","window","innerHeight","Math","floor","random","config","onClickNode","sizeBox","clientHeight","clientWidth","ref","elmt","links","root","flexDirection","background","searchContainer","overflowY","dataContainer","maxHeight","graphContainer","displayerContainer","App","personList","currentPerson","graphData","GetPersonList","updateGraphData","text","trim","parsedId","parseInt","isNaN","collectedData","checkExist","setInterval","clearInterval","foundList","undefined","find","forEach","friend","linkData","Container","Grid","spacing","xs","md","lg","Boolean","location","hostname","match","render","StrictMode","rel","href","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oSAGMA,EAAS,6BAMR,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAAC,EAAA,6DACGC,EAAIC,IAAaC,KAAKN,EANb,WAMiCE,GAD7C,SAEoBK,IAAMC,IAAIJ,GAF9B,cAEGK,EAFH,OAGHC,QAAQC,IAAIF,EAASG,MAHlB,kBAIIH,EAASG,MAJb,4C,sBAQA,SAAeC,IAAtB,+B,4CAAO,4BAAAV,EAAA,sEACcW,EAbG,IAaiC,IADlD,cACCC,EADD,yBAEIA,GAFJ,4C,+BAQQD,E,gFAAf,WAAkCE,EAAIC,GAAtC,qBAAAd,EAAA,0DACQc,EAAYC,MAAK,SAAAC,GAAC,OAAIA,EAAEH,KAAOA,KADvC,yCAEeC,GAFf,uBAM2BhB,EAAQe,GANnC,UAMUP,EANV,OAOQM,EAAOE,EACa,MAApBR,EAASW,OARjB,iBAWQH,EAAYI,KAAK,CAACL,GAAIA,EAAIM,KAAMb,EAASc,QAAQD,OAC7CE,EAAUf,EAASc,QAAQC,QACtBC,EAAI,EAbrB,aAawBA,EAAID,EAAQE,QAbpC,kCAcyBZ,EAAkBU,EAAQC,GAAGT,GAAID,GAd1D,QAcYA,EAdZ,eAa4CU,IAb5C,gDAiBmC,MAApBhB,EAASW,QAChBV,QAAQC,IAAI,YAAcK,GAlBlC,iCAqBWD,GArBX,6C,sECjBMY,EAAS,CACbC,MAAO,CACLC,QAAS,OACTC,QAAS,UACTC,OAAQ,QAEVC,MAAO,CACLC,KAAM,EACNC,WAAY,QAEdC,KAAM,CACJL,QAAS,SAmDEM,E,kDA7Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,IAGT,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBAPL,E,wDAUPE,GACVC,KAAKC,SAAS,CAAEN,MAAOI,EAAMG,OAAOP,U,qCAItBI,GACQ,KAAlBA,EAAMI,SACRH,KAAKP,MAAMK,eAAgBE,KAAKN,MAAMC,S,+BAIhC,IAAD,OACP,OAEE,kBAACS,EAAA,EAAD,CAAOC,MAAUtB,EAAOC,OAEtB,kBAACsB,EAAA,EAAD,CACED,MAAUtB,EAAOK,MACjBmB,YAAc,4CACdC,SAAaR,KAAKJ,YAClBa,UAAcT,KAAKF,iBAIrB,kBAACY,EAAA,EAAD,CACEL,MAAUtB,EAAOQ,KACjBoB,QAAY,kBAAM,EAAKlB,MAAMmB,SAAU,EAAKlB,MAAMC,SAElD,kBAAC,IAAD,Y,GAxCgBkB,IAAMC,W,2BChB1B/B,EAAS,CACbgC,cAAe,CACb5B,OAAQ,QAEV6B,OAAQ,CACNC,UAAW,QAEbC,KAAM,CACJhC,QAAS,OACT+B,UAAW,OACXE,aAAc,S,IA+JHC,E,kDA3Ib,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IAED4B,iBAAmB,EAAKA,iBAAiBxB,KAAtB,gBACxB,EAAKyB,aAAe,EAAKA,aAAazB,KAAlB,gBACpB,EAAK0B,cAAgB,EAAKA,cAAc1B,KAAnB,gBACrB,EAAK2B,WAAa,EAAKA,WAAW3B,KAAhB,gBAND,E,6DASDJ,GAChB,OAAkB,MAAdA,EAAMzB,MAAoC,MAApByB,EAAMzB,KAAKU,MAAgBsB,KAAKP,MAAMgC,UACvD,GAEC,kBAAC,IAAMC,SAAP,KACF,OAASjC,EAAMzB,KAAKI,GAAK,IADvB,WAEI,2BAAKqB,EAAMzB,KAAK2D,Y,mCAMlBlC,GACZ,OACE,kBAACmC,EAAA,EAAD,CAAMvB,MAAUtB,EAAOmC,MACrB,kBAACW,EAAA,EAAD,CACEC,QAAU,YACVC,MAAM,iBAEHtC,EAAMnC,MAAQ,EAAK,KAExB,kBAACuE,EAAA,EAAD,CAAYC,QAAU,MAClBrC,EAAMuC,MAAMtD,MAEhB,uBAAM2C,iBAAN,CAAuBrD,KAASyB,EAAMuC,W,sCAK1B,IAAD,OACf,MAA6B,MAAzBhC,KAAKP,MAAMzB,KAAKU,MAAgBsB,KAAKP,MAAMgC,WAAazB,KAAKP,MAAMwC,KAC9D,GACE,YAAajC,KAAKP,MAAMzB,MAAQgC,KAAKP,MAAMzB,KAAKY,QAAQE,OAAS,EAExE,kBAACoD,EAAA,EAAD,CAAK7B,MAAUtB,EAAOiC,QACpB,kBAACa,EAAA,EAAD,CAAYC,QAAQ,MAApB,UA5DV,SAAwBK,GACtB,IAAIC,EAAWD,EAUf,OAPAC,EAAWA,EAASC,QAAO,SAACL,EAAO1E,GACjC,IAAIgF,EAAcC,KAAKC,UAAUR,GACjC,OAAO1E,IAAU8E,EAASK,WAAU,SAACC,GACnC,OAAOJ,IAAgBC,KAAKC,UAAUE,SAyDhCC,CAAc3C,KAAKP,MAAMzB,KAAKY,SAASgE,KAAI,SAACZ,EAAO1E,GACjD,OACE,kBAAC4E,EAAA,EAAD,CAAKW,IAAQvF,GACX,kBAAC,EAAKgE,aAAN,CACEU,MAAUA,EACV1E,MAAUA,SAUtB,kBAAC4E,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,8B,mCAON,OAAI7B,KAAKP,MAAMgC,UAEX,kBAAC,IAAMC,SAAP,KACE,kBAACG,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,iBAFR,oBAMA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,cAGA,kBAACD,EAAA,EAAD,CAAYxB,MAAUtB,EAAOiC,UAKxBhB,KAAKP,MAAMwC,KAElB,kBAAC,IAAMP,SAAP,KACE,kBAACG,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,iBAFR,oBAMA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,yBAGA,kBAACD,EAAA,EAAD,CAAYxB,MAAUtB,EAAOiC,UAO/B,kBAAC,IAAMU,SAAP,KACE,kBAACG,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,iBAFR,oBAMA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAChB9B,KAAKP,MAAMzB,KAAKU,MAEpB,kBAACmD,EAAA,EAAD,CAAYxB,MAAUtB,EAAOiC,QAC3B,uBAAMK,iBAAN,CAAuBrD,KAASgC,KAAKP,MAAMzB,W,+BAQnD,OACE,kBAACkE,EAAA,EAAD,CAAK7B,MAAUtB,EAAOgC,eAElBf,KAAKwB,aAEP,kBAACsB,EAAA,EAAD,CAASzC,MAAUtB,EAAOiC,SAExBhB,KAAKuB,qB,GAvIaV,IAAMC,W,QC3B5B/B,EAAS,CACbgE,UAAW,CACTC,OAAQ,OACRC,SAAU,UAEZC,MAAO,CACLF,OAAQ,OACRG,MAAO,SAMPC,EAAW,CACbC,uBAAuB,EACvBC,KAAM,CACJvB,MAAO,aACPwB,KAAM,IACNC,qBAAsB,OACtBC,cAAe,QAEjBC,KAAM,CACJC,eAAgB,aAElBX,OAAO,IACPY,UAAU,GAINC,EAAe,aAIfC,EAAoB,SAASC,KAI7BC,EAAmB,SAASjE,EAAOgE,KAInCE,EAAkB,SAASF,KAI3BG,EAAiB,SAASH,KAI1BI,EAAc,SAASC,EAAQlE,KAI/BmE,EAAmB,SAAStE,EAAOqE,EAAQlE,KAI3CoE,EAAkB,SAASF,EAAQlE,KAInCqE,EAAiB,SAASH,EAAQlE,KAIlCsE,EAAuB,SAAST,EAAQU,EAAGC,KA0ElCC,E,kDArEb,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IAmBRmF,yCAA2C,SAAAC,GACzC,OAAOA,EAAMjC,KAAI,SAAAkC,GAAC,OACdC,OAAOC,OAAO,GAAIF,EAAG,CACjBL,EAAGK,EAAEL,GAAKQ,OAAOC,YAAc,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACnDX,EAAGI,EAAEJ,GAAKO,OAAOC,YAAc,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,gBArB3D,EAAK3F,MAAQ,CACX4F,OAAQlC,GAGV,EAAKmC,YAAc,EAAKA,YAAY1F,KAAjB,gBAPF,E,gEAYjB,IAAMmD,EAAShD,KAAKwF,QAAQC,aACtBtC,EAAQnD,KAAKwF,QAAQE,YAC3BtC,EAASJ,OAASA,EAClBI,EAASD,MAAQA,EACjBnD,KAAKC,SAAS,M,kCAaH8D,GACuB,oBAAvB/D,KAAKP,MAAMkB,UACpB7C,QAAQC,IAAI,OACZiC,KAAKP,MAAMkB,QAAQoD,M,+BAIb,IAAD,OACP,OACE,kBAAC7B,EAAA,EAAD,CACEyD,IAAQ,SAAAC,GAAS,EAAKJ,QAAUI,GAChCvF,MAAUtB,EAAOgE,WAEjB,kBAAC,QAAD,CACE1C,MAAOtB,EAAOmE,MACdyC,IAAQ,SAAAC,GAAS,EAAK1C,MAAQ0C,GAC9BxH,GAAG,QACHJ,KAAM,CACJ6G,MAAO7E,KAAK4E,yCAAyC5E,KAAKP,MAAMzB,KAAK6G,OACrEgB,MAAO7F,KAAKP,MAAMzB,KAAK6H,OAGzBP,OAAQtF,KAAKN,MAAM4F,OACnBC,YAAavF,KAAKuF,YAClBzB,kBAAmBA,EACnBE,iBAAkBA,EAClBH,aAAcA,EACdM,YAAaA,EACbE,iBAAkBA,EAClBJ,gBAAiBA,EACjBC,eAAgBA,EAChBI,gBAAiBA,EACjBC,eAAgBA,EAChBC,qBAAsBA,S,GA/DH3D,IAAMC,WClE7B/B,GAAS,CACb+G,KAAM,CACJ7G,QAAS,OACT8G,cAAe,SACfC,WAAY,QACZhD,OAAQ,SAEViD,gBAAiB,CACfD,WAAY,WAEdjF,cAAe,CACb1B,KAAM,WACN6G,UAAW,QAEbC,cAAe,CACbH,WAAY,UACZE,UAAW,OACXE,UAAW,QAEbC,eAAgB,CACdL,WAAY,OACZhD,OAAQ,QAEVsD,mBAAoB,IAgKPC,G,kDA3Jb,WAAY9G,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX8G,WAAY,GACZC,cAAe,CACbrI,GAAI,IACJM,KAAM,IACNE,QAAS,IAEX6C,WAAW,EACXQ,MAAM,EACNyE,UAAW,CACT7B,MAAO,CACL,CAAEzG,GAAI,IAAKM,KAAM,IAAK+F,GAAI,IAAKC,GAAI,MAErCmB,MAAO,KAGX,EAAKc,cAAgB,EAAKA,cAAc9G,KAAnB,gBACrB,EAAKe,SAAW,EAAKA,SAASf,KAAd,gBAChB,EAAK+G,gBAAkB,EAAKA,gBAAgB/G,KAArB,gBApBN,E,4LAwBE5B,I,OAAbE,E,OACN6B,KAAKN,MAAM8G,WAAarI,EACxBL,QAAQC,IAAIiC,KAAKN,O,8KAGJmH,G,sFAET7G,KAAKN,MAAM+B,U,oDAGfzB,KAAKC,SAAS,CAAEwB,WAAW,IAE3BoF,EAAOA,EAAKC,OACRC,EAAWC,SAASH,GAEnBI,MAAMF,G,iCACiB1J,EAAQwJ,G,UAEL,OAFzBK,E,QAEc1I,O,wBAChBwB,KAAKC,SAAS,CACZwB,WAAW,EACXgF,cAAeS,EAAcvI,QAC7BsD,MAAM,IAGRjC,KAAK4G,kB,2BAM4B,IAAjC5G,KAAKN,MAAM8G,WAAW1H,QACxBkB,KAAK2G,gBAIHQ,EAAaC,YAAW,sBAAC,8BAAA7J,EAAA,2DACvB,EAAKmC,MAAM8G,WAAW1H,OAAS,GADR,oBAEzBuI,cAAcF,MAGVG,EAAY,EAAK5H,MAAM8G,WAAWnE,QAAO,SAAA9D,GAAC,OAAIA,EAAEG,OAASmI,MAC/C/H,OAAS,GANE,iCAOGzB,EAAQiK,EAAU,GAAGlJ,IAPxB,OAOnB8I,EAPmB,OAQvBpJ,QAAQC,IAAImJ,GAGZ,EAAKjH,SAAS,CACZwB,WAAW,EACXgF,cAAeS,EAAcvI,QAC7BsD,MAAM,IAER,EAAK2E,kBAhBkB,wBAkBvB,EAAK3G,SAAS,CACZwB,WAAW,EACXQ,MAAM,IApBe,4CAwB1B,K,gJAGc,IAAD,OACZyE,EAAY1G,KAAKN,MAAMgH,eAEgEa,IAAvFb,EAAU7B,MAAM2C,MAAM,SAAA9E,GAAU,OAAOA,EAAKtE,KAAO,EAAKsB,MAAM+G,cAAcrI,OAG9EsI,EAAU7B,MAAMpG,KAAK,CACnBL,GAAI4B,KAAKN,MAAM+G,cAAcrI,GAC7BM,KAAMsB,KAAKN,MAAM+G,cAAc/H,OAKnCsB,KAAKN,MAAM+G,cAAc7H,QAAQ6I,SAAQ,SAACC,EAAQpK,QACyBiK,IAArEb,EAAU7B,MAAM2C,MAAM,SAAA9E,GAAU,OAAOA,EAAKtE,KAAOsJ,EAAOtJ,OAG5DsI,EAAU7B,MAAMpG,KAAK,CACnBL,GAAIsJ,EAAOtJ,GACXM,KAAMgJ,EAAOhJ,OAKjB,IAAIiJ,EAAW,CACbvD,OAAQ,EAAK1E,MAAM+G,cAAcrI,GACjC8B,OAAQwH,EAAOtJ,SAEyGmJ,IAAtHb,EAAUb,MAAM2B,MAAM,SAAA9E,GAAU,OAAQA,EAAK0B,SAAWuD,EAASvD,QAAY1B,EAAKxC,SAAWyH,EAASzH,WACxGwG,EAAUb,MAAMpH,KAAKkJ,MAIzB3H,KAAKC,SAAS,CAAEyG,UAAWA,IAC3B5I,QAAQC,IAAIiC,KAAKN,S,+BAIjB,OACE,kBAACwC,EAAA,EAAD,CAAK7B,MAAUtB,GAAO+G,MACpB,kBAAC5D,EAAA,EAAD,CAAK7B,MAAUtB,GAAOkH,iBACpB,kBAAC2B,EAAA,EAAD,KACE,kBAAC,EAAD,CACEhH,SAAaZ,KAAKY,SAClBd,eAAmBE,KAAKY,aAI9B,kBAACiH,EAAA,EAAD,CAAM9E,WAAS,EAAC+E,QAAS,EAAGzH,MAAUtB,GAAOgC,eAC3C,kBAAC8G,EAAA,EAAD,CAAMnF,MAAI,EAACqF,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG5H,MAAStB,GAAOoH,eAC/C,kBAAC,EAAD,CACEnI,KAASgC,KAAKN,MAAM+G,cACpBhF,UAAczB,KAAKN,MAAM+B,UACzBQ,KAASjC,KAAKN,MAAMuC,QAGxB,kBAAC4F,EAAA,EAAD,CAAMnF,MAAI,EAACqF,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG5H,MAAUtB,GAAOsH,gBAChD,kBAAC,EAAD,CACErI,KAASgC,KAAKN,MAAMgH,UACpB/F,QAAYX,KAAKY,kB,GAnJbC,IAAMC,WC1BJoH,QACW,cAA7BjD,OAAOkD,SAASC,UAEe,UAA7BnD,OAAOkD,SAASC,UAEhBnD,OAAOkD,SAASC,SAASC,MACvB,2DCZNC,iBACE,kBAAC,IAAMC,WAAP,KACE,0BAAMC,IAAI,aAAaC,KAAK,+DAC5B,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrL,QAAQqL,MAAMA,EAAMC,a","file":"static/js/main.7eef6c02.chunk.js","sourcesContent":["import PlatformPath from 'path';\r\nimport axios from 'axios';\r\n\r\nconst apiURL = \"https://avatar.labpro.dev/\"\r\nconst friendsAPI = \"friends/\"\r\nconst graphStartPoint = \"1\"\r\n\r\n// Based on: https://malcoded.com/posts/react-http-requests-axios/\r\n// Get friends data from an index\r\nexport async function GetData (index) {\r\n    const p = PlatformPath.join(apiURL, friendsAPI, index);\r\n    const response = await axios.get(p);\r\n    console.log(response.data);\r\n    return response.data;\r\n}\r\n\r\n// Get all person from API\r\nexport async function GetAllPerson () {\r\n    let list = await TraverseGraphLoop (graphStartPoint, []);\r\n    return list;\r\n}\r\n\r\n// Recursive function to get all person\r\n// Id is the id of the person\r\n// Currentlist is the currently tracked people data\r\nasync function TraverseGraphLoop (id, currentList) {\r\n    if (currentList.some(e => e.id === id)) {\r\n        return currentList;\r\n    }\r\n\r\n    // Get Friends List\r\n    const response = await GetData(id);\r\n    let list = currentList;\r\n    if (response.status === 200)  {\r\n        // Save name in currentList\r\n        // console.log(list.filter(e => e.id === id)[0]);\r\n        currentList.push({id: id, name: response.payload.name});\r\n        let friends = response.payload.friends;\r\n        for (let i = 0; i < friends.length; i++) {\r\n            list = await TraverseGraphLoop(friends[i].id, list);\r\n            // console.log (friends[i].id);\r\n        }\r\n    } else if (response.status === 404) {\r\n        console.log(\"Missing: \" + id);\r\n    }\r\n\r\n    return list;\r\n}","import React from 'react';\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nconst styles = {\r\n  paper: {\r\n    display: \"flex\",\r\n    padding: '2px 4px',\r\n    margin: '10px',\r\n  },\r\n  field: {\r\n    flex: 1,\r\n    marginLeft: \"10px\",\r\n  },\r\n  icon: {\r\n    padding: \"10px\",\r\n  },\r\n};\r\n\r\nclass SearchInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: \"\",\r\n    }\r\n\r\n    this.inputChange = this.inputChange.bind(this);\r\n    this.onEnterPressed = this.onEnterPressed.bind(this);\r\n  }\r\n\r\n  inputChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  // https://stackoverflow.com/questions/43384039/how-to-get-input-textfield-values-when-enter-key-is-pressed-in-react-js\r\n  onEnterPressed (event) {\r\n    if (event.keyCode === 13) {\r\n      this.props.onEnterPressed( this.state.value );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // Main Container\r\n      <Paper style = { styles.paper } >\r\n        {/* Input Field */}\r\n        <InputBase\r\n          style = { styles.field }\r\n          placeholder = \"Pencarian - Masukkan nama lengkap atau id\"\r\n          onChange = { this.inputChange }\r\n          onKeyDown = { this.onEnterPressed }\r\n        />\r\n\r\n        {/* Search Button */}\r\n        <IconButton\r\n          style = { styles.icon }\r\n          onClick = { () => this.props.onSearch( this.state.value ) }\r\n        >\r\n          <SearchIcon/>\r\n        </IconButton>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchInput;","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box'\r\nimport Card from '@material-ui/core/Card'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  mainContainer: {\r\n    margin: '15px',\r\n  },\r\n  spaced: {\r\n    marginTop: '15px',\r\n  },\r\n  card: {\r\n    padding: '10px',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n}\r\n\r\nfunction FilterFriends (friendsList) {\r\n  let filtered = friendsList\r\n\r\n  // Filter duplicates https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\r\n  filtered = filtered.filter((entry, index) => {\r\n    let stringEntry = JSON.stringify(entry);\r\n    return index === filtered.findIndex((item) => {\r\n      return stringEntry === JSON.stringify(item)\r\n    });\r\n  })\r\n\r\n  return filtered;\r\n}\r\n\r\nclass DataDisplayer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.RenderIdElements = this.RenderIdElements.bind(this);\r\n    this.RenderFriend = this.RenderFriend.bind(this);\r\n    this.RenderFriends = this.RenderFriends.bind(this);\r\n    this.SearchText = this.SearchText.bind(this);\r\n  }\r\n\r\n  RenderIdElements (props) {\r\n    if (props.data == null || props.data.name === \"-\" || this.props.searching) {\r\n      return \"\";\r\n    } else {\r\n      return (<React.Fragment> \r\n          { \"Id: \" + props.data.id + \" \" }\r\n          Elemen: <i>{ props.data.element }</i>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  RenderFriend (props) {\r\n    return (\r\n      <Card style = { styles.card }>\r\n        <Typography \r\n          variant = \"subtitle2\"\r\n          color=\"textSecondary\"\r\n        >\r\n          { (props.index + 1) + '.' }\r\n        </Typography>\r\n        <Typography variant = 'h6'>\r\n          { props.entry.name }\r\n        </Typography>\r\n        <this.RenderIdElements data = { props.entry } />\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  RenderFriends () {\r\n    if (this.props.data.name === \"-\" || this.props.searching || this.props.fail) {\r\n      return \"\";\r\n    } else if (\"friends\" in this.props.data && this.props.data.friends.length > 0) {\r\n      return (\r\n        <Box style = { styles.spaced } >\r\n          <Typography variant='h6'> \r\n            Rekan: \r\n          </Typography>\r\n          {\r\n            FilterFriends(this.props.data.friends).map((entry, index) => {\r\n              return (\r\n                <Box key = { index }>\r\n                  <this.RenderFriend \r\n                    entry = { entry } \r\n                    index = { index } \r\n                  />\r\n                </Box>\r\n              );\r\n            })\r\n          }\r\n        </Box>\r\n      );\r\n    } else {\r\n      return (\r\n        <Box>\r\n          <Typography> Rekan: Tidak ada </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n  }\r\n\r\n  SearchText () {\r\n    if (this.props.searching) {\r\n      return (\r\n        <React.Fragment>\r\n          <Typography \r\n            variant='subtitle1' \r\n            color=\"textSecondary\" \r\n          >\r\n            Hasil Pencarian:\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            Mencari...\r\n          </Typography>\r\n          <Typography style = { styles.spaced }>\r\n            {/* Nothing */}\r\n          </Typography>\r\n        </React.Fragment>\r\n      )\r\n    } else if (this.props.fail) {\r\n      return (\r\n        <React.Fragment>\r\n          <Typography \r\n            variant='subtitle1' \r\n            color=\"textSecondary\" \r\n          >\r\n            Hasil Pencarian:\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            Orang tidak ditemukan\r\n          </Typography>\r\n          <Typography style = { styles.spaced }>\r\n            {/* Nothing */}\r\n          </Typography>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Typography \r\n            variant='subtitle1' \r\n            color=\"textSecondary\" \r\n          >\r\n            Hasil Pencarian:\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            { this.props.data.name }\r\n          </Typography>\r\n          <Typography style = { styles.spaced }>\r\n            <this.RenderIdElements data = { this.props.data } />\r\n          </Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Box style = { styles.mainContainer }>\r\n        {/* Top Row */}\r\n        { this.SearchText() }\r\n\r\n        <Divider style = { styles.spaced } />\r\n        {/* Bottom Row (Friends) */}\r\n        { this.RenderFriends() }\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataDisplayer;","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { Graph } from 'react-d3-graph';\r\n\r\n// TODO: Make graph responsive to screen size\r\n\r\nconst styles = {\r\n  container: {\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  graph: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  }\r\n}\r\n\r\n// the graph configuration, you only need to pass down properties\r\n// that you want to override, otherwise default ones will be used\r\nvar myConfig = {\r\n  nodeHighlightBehavior: true,\r\n  node: {\r\n    color: \"lightgreen\",\r\n    size: 120,\r\n    highlightStrokeColor: \"blue\",\r\n    labelProperty: \"name\",\r\n  },\r\n  link: {\r\n    highlightColor: \"lightblue\",\r\n  },\r\n  height:800,\r\n  directed: true,\r\n};\r\n\r\n// graph event callbacks\r\nconst onClickGraph = function() {\r\n  // window.alert(`Clicked the graph background`);\r\n};\r\n\r\nconst onDoubleClickNode = function(nodeId) {\r\n  // window.alert(`Double clicked node ${nodeId}`);\r\n};\r\n\r\nconst onRightClickNode = function(event, nodeId) {\r\n  // window.alert(`Right clicked node ${nodeId}`);\r\n};\r\n\r\nconst onMouseOverNode = function(nodeId) {\r\n  // window.alert(`Mouse over node ${nodeId}`);\r\n};\r\n\r\nconst onMouseOutNode = function(nodeId) {\r\n  // window.alert(`Mouse out node ${nodeId}`);\r\n};\r\n\r\nconst onClickLink = function(source, target) {\r\n  // window.alert(`Clicked link between ${source} and ${target}`);\r\n};\r\n\r\nconst onRightClickLink = function(event, source, target) {\r\n  // window.alert(`Right clicked link between ${source} and ${target}`);\r\n};\r\n\r\nconst onMouseOverLink = function(source, target) {\r\n  // window.alert(`Mouse over in link between ${source} and ${target}`);\r\n};\r\n\r\nconst onMouseOutLink = function(source, target) {\r\n  // window.alert(`Mouse out link between ${source} and ${target}`);\r\n};\r\n\r\nconst onNodePositionChange = function(nodeId, x, y) {\r\n  // window.alert(`Node ${nodeId} is moved to new position. New position is x= ${x} y= ${y}`);\r\n};\r\n\r\nclass GraphDisplayer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      config: myConfig,\r\n    }\r\n\r\n    this.onClickNode = this.onClickNode.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Graph resize by getting box height https://stackoverflow.com/questions/35153599/reactjs-get-height-of-an-element\r\n    const height = this.sizeBox.clientHeight;\r\n    const width = this.sizeBox.clientWidth;\r\n    myConfig.height = height;\r\n    myConfig.width = width;\r\n    this.setState({  });\r\n  }\r\n\r\n  // Init at approximately the middle https://github.com/danielcaldas/react-d3-graph/blob/master/sandbox/Sandbox.jsx\r\n  decorateGraphNodesWithInitialPositioning = nodes => {\r\n    return nodes.map(n =>\r\n        Object.assign({}, n, {\r\n            x: n.x || window.innerHeight / 2 - Math.floor(Math.random() * 100),\r\n            y: n.y || window.innerHeight / 2 - Math.floor(Math.random() * 100),\r\n        })\r\n    );\r\n  };\r\n\r\n  onClickNode (nodeId) {\r\n    if (typeof this.props.onClick === \"function\") {\r\n      console.log(\"yes\");\r\n      this.props.onClick(nodeId);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Box \r\n        ref = {(elmt => {this.sizeBox = elmt})} \r\n        style = { styles.container }\r\n      >\r\n        <Graph \r\n          style={styles.graph}\r\n          ref = {(elmt => {this.graph = elmt})} \r\n          id=\"graph\" // id is mandatory, if no id is defined rd3g will throw an error\r\n          data={{\r\n            nodes: this.decorateGraphNodesWithInitialPositioning(this.props.data.nodes),\r\n            links: this.props.data.links,\r\n          }}\r\n          // data = { this.props.data }\r\n          config={this.state.config}\r\n          onClickNode={this.onClickNode}\r\n          onDoubleClickNode={onDoubleClickNode}\r\n          onRightClickNode={onRightClickNode}\r\n          onClickGraph={onClickGraph}\r\n          onClickLink={onClickLink}\r\n          onRightClickLink={onRightClickLink}\r\n          onMouseOverNode={onMouseOverNode}\r\n          onMouseOutNode={onMouseOutNode}\r\n          onMouseOverLink={onMouseOverLink}\r\n          onMouseOutLink={onMouseOutLink}\r\n          onNodePositionChange={onNodePositionChange}\r\n        />\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GraphDisplayer;","import React from 'react';\r\n\r\nimport Box from '@material-ui/core/Box'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport { GetData, GetAllPerson } from './getData'\r\nimport SearchInput from './searchInput'\r\nimport DataDisplayer from './dataDisplayer';\r\nimport GraphDisplayer from './graphDisplayer';\r\n\r\nconst styles = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    background: 'white',\r\n    height: '100vh',\r\n  },\r\n  searchContainer: {\r\n    background: '#2196f3'\r\n  },\r\n  mainContainer: {\r\n    flex: '0 1 100%',\r\n    overflowY: 'auto',\r\n  },\r\n  dataContainer: {\r\n    background: '#fafafa',\r\n    overflowY: 'auto',\r\n    maxHeight: '100%',\r\n  },\r\n  graphContainer: {\r\n    background: '#fff',\r\n    height: '100%',\r\n  },\r\n  displayerContainer: {\r\n  }\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      personList: [],\r\n      currentPerson: {\r\n        id: \"0\",\r\n        name: \"-\",\r\n        friends: [],\r\n      },\r\n      searching: false,\r\n      fail: false,\r\n      graphData: {\r\n        nodes: [\r\n          { id: \"0\", name: \"-\", x: -100, y: -100 }  // Dummy data so graph renderer wouldn't crash\r\n        ],\r\n        links: [],\r\n      }\r\n    };\r\n    this.GetPersonList = this.GetPersonList.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.updateGraphData = this.updateGraphData.bind(this);\r\n  }\r\n\r\n  async GetPersonList() {\r\n    const list = await GetAllPerson();\r\n    this.state.personList = list;\r\n    console.log(this.state);\r\n  }\r\n\r\n  async onSearch(text) {\r\n    // Reject if search is ongoing\r\n    if (this.state.searching) {\r\n      return;\r\n    }\r\n    this.setState({ searching: true });\r\n\r\n    text = text.trim();\r\n    let parsedId = parseInt(text);\r\n    // Try parse as id first\r\n    if (!isNaN(parsedId)) {\r\n      let collectedData = await GetData(text);\r\n      // Check if data valid\r\n      if (collectedData.status === 200) {\r\n        this.setState({ \r\n          searching: false,\r\n          currentPerson: collectedData.payload,\r\n          fail: false,\r\n        });\r\n        \r\n        this.updateGraphData()\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Get person list if it does not exist yet\r\n    if (this.state.personList.length === 0) {\r\n      this.GetPersonList();\r\n    }\r\n\r\n    // Wait until all found https://stackoverflow.com/questions/16149431/make-function-wait-until-element-exists\r\n    let checkExist = setInterval(async () => {\r\n      if (this.state.personList.length > 0) {\r\n        clearInterval(checkExist);\r\n         \r\n        // Get person\r\n        let foundList = this.state.personList.filter(e => e.name === text);\r\n        if (foundList.length > 0) {\r\n          let collectedData = await GetData(foundList[0].id);\r\n          console.log(collectedData);\r\n\r\n          // Update data\r\n          this.setState({ \r\n            searching: false,\r\n            currentPerson: collectedData.payload,\r\n            fail: false,\r\n          });\r\n          this.updateGraphData()\r\n        } else {\r\n          this.setState({ \r\n            searching: false,\r\n            fail: true,\r\n          });\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  updateGraphData() {\r\n    let graphData = this.state.graphData;\r\n    // Check if current person not already exist in graph\r\n    if (graphData.nodes.find( item => { return item.id === this.state.currentPerson.id } ) === undefined) {\r\n\r\n      // Insert current person node\r\n      graphData.nodes.push({\r\n        id: this.state.currentPerson.id,\r\n        name: this.state.currentPerson.name,\r\n      })\r\n    }\r\n\r\n    // Check for all friends if not already exist\r\n    this.state.currentPerson.friends.forEach((friend, index) => {\r\n      if (graphData.nodes.find( item => { return item.id === friend.id } ) === undefined) {\r\n\r\n        // Insert friend node\r\n        graphData.nodes.push({\r\n          id: friend.id,\r\n          name: friend.name,\r\n        });\r\n      }\r\n\r\n      // Insert link if not already exist\r\n      let linkData = {\r\n        source: this.state.currentPerson.id,\r\n        target: friend.id,\r\n      };\r\n      if (graphData.links.find( item => { return (item.source === linkData.source) && (item.target === linkData.target) } ) === undefined) {\r\n        graphData.links.push(linkData);\r\n      }\r\n    })\r\n\r\n    this.setState({ graphData: graphData });\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box style = { styles.root }>\r\n        <Box style = { styles.searchContainer }>\r\n          <Container>\r\n            <SearchInput \r\n              onSearch = { this.onSearch } \r\n              onEnterPressed = { this.onSearch }\r\n            />\r\n          </Container>\r\n        </Box>\r\n        <Grid container spacing={0} style = { styles.mainContainer }>\r\n          <Grid item xs={12} md={4} lg={3} style = {styles.dataContainer}>\r\n            <DataDisplayer \r\n              data = { this.state.currentPerson } \r\n              searching = { this.state.searching } \r\n              fail = { this.state.fail }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={9} style = { styles.graphContainer }>\r\n            <GraphDisplayer \r\n              data = { this.state.graphData } \r\n              onClick = { this.onSearch }\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <React.StrictMode>\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"></link>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}